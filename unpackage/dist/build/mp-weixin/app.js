"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const e=require("./common/vendor.js"),t=require("./utils/request.js");Math;const i=["难受","心情不好","自杀","焦虑","恐慌","抑郁","不想活","压力大","很累","绝望","无助","烦躁","痛苦","崩溃","想哭","不开心","伤心","失眠","没意义","想放弃","没人懂","孤独","害怕","恐惧","烦","累","不想说话","不想动","不想见人","不想上班","不想上学","没动力","没希望","想死","想离开","烦闷","心累","心痛","绝望","麻木","无感","无聊","无助","无望","不想活了","撑不住","撑不下去","情绪低落","消沉","郁闷","闷闷不乐","萎靡不振","沮丧","悲伤","哀伤","愁苦","失落","灰心","失望","愤懑","恼怒","火大","暴躁","狂躁","怨恨","厌恶","憎恨","反感","不满","气愤","紧张","担忧","忧虑","不安","手足无措","心烦意乱","忐忑","惊恐","骇然","毛骨悚然","不寒而栗","寂寞","孤单","空虚","失落","无聊","空虚","迷茫","彷徨","困惑","疲惫","精疲力尽","身心俱疲","筋疲力尽","虚弱","乏力","力不从心","透支","厌世","生无可恋","了无生趣","苟延残喘","行尸走肉","自我否定","自我怀疑","无地自容","羞愧","内疚","逃避","躲避","退缩","不敢面对","不敢想","不想提","忘不掉","放不下","走不出来"];let o=null;const n=e.defineComponent(new UTSJSONObject({data:()=>new UTSJSONObject({messages:[{content:"你好！我是一个AI心理助手，很高兴为你服务！有什么可以帮助你的吗？",type:"ai",id:1},{content:"如果你有任何情绪上的困扰，或者只是想找人聊聊，都可以告诉我哦！",type:"ai",id:2}],userInput:"",keyboardHeight:0,animating:!1,scrollTop:0,loading:!1,messageCount:0,showEmotionModal:!1,sessionId:"user_"+Date.now(),lastShowPromptTime:0,isLandscape:!1,windowWidth:0,windowHeight:0}),onLoad(){console.log("页面 onLoad: 初始化屏幕尺寸和监听器");const t=e.index.getSystemInfoSync();this.windowWidth=t.windowWidth,this.windowHeight=t.windowHeight,this.checkOrientation(),window.addEventListener("resize",this.handleResize)},onUnload(){console.log("页面 onUnload: 移除屏幕尺寸监听器"),window.removeEventListener("resize",this.handleResize),o&&clearTimeout(o)},methods:new UTSJSONObject({checkOrientation(){const e=this.windowWidth>this.windowHeight;this.isLandscape!==e&&(this.isLandscape=e,console.log("屏幕方向切换到: "+(e?"横屏模式":"竖屏模式")))},handleResize(){console.log("窗口尺寸变化事件触发"),clearTimeout(o),o=setTimeout((()=>{const t=e.index.getSystemInfoSync();this.windowWidth=t.windowWidth,this.windowHeight=t.windowHeight,console.log(`新窗口尺寸: 宽度=${this.windowWidth}, 高度=${this.windowHeight}`),this.checkOrientation()}),100)},containsNegativeKeyword:(e=null)=>i.some((t=>e.includes(t))),containsAIRecommendedKeyword(e=null){let t=["情绪扫描","情绪分析","检测你的情绪","心理检测","情绪波动","情绪状态","心情如何","心理状况","需要帮助","看起来很","建议你","似乎你在","或许你需要","我感受到你的","看起来你可能在","你的语气显示","让我们一起"].some((t=>e.includes(t))),i=["伤心","难过","焦虑","担忧","生气","愤怒","恐惧","紧张","压力","困扰","烦恼","消极","抑郁","悲观"].filter((t=>e.includes(t))).length;return t||i>=2},runComprehensiveEmotionCheck(){var t,i;if(this.messageCount<3)return null;if(Date.now()-this.lastShowPromptTime<3e5)return null;let o=!1;try{for(var n=e.__values(this.messages),s=n.next();!s.done;s=n.next()){var l=s.value;if("user"===l.type){if(this.containsNegativeKeyword(l.content)){o=!0;break}}else if("ai"===l.type&&this.containsAIRecommendedKeyword(l.content)){o=!0;break}}}catch(a){t={error:a}}finally{try{s&&!s.done&&(i=n.return)&&i.call(n)}finally{if(t)throw t.error}}o&&!this.showEmotionModal&&setTimeout((()=>{this.showEmotionModal=!0,this.lastShowPromptTime=Date.now()}),1e3)},handleSend(){if(!this.userInput.trim()||this.animating||this.loading)return null;const e=this.userInput.trim();this.userInput="",this.animating=!0,this.loading=!0,this.messages.push({content:e,type:"user",id:Date.now()}),this.$nextTick((()=>{this.scrollToBottom(),this.getAIResponse(e),this.messageCount++,this.runComprehensiveEmotionCheck()}))},getAIResponse(i=null){console.log("getAIResponse: 开始调用LLM API"),console.log("发送给LLM的userText:",i),console.log("使用的sessionId:",this.sessionId),e.index.showLoading({title:"分析中...",mask:!1}),t.request.chatWithLLM(new UTSJSONObject({message:i,sessionId:this.sessionId})).then(((t=null)=>{console.log("LLM API调用成功，收到完整响应:",t),e.index.hideLoading();const i=t.response_text;i?(this.messages.push({content:i,type:"ai",id:Date.now()}),console.log("LLM响应内容:",i),this.runComprehensiveEmotionCheck()):(console.warn("LLM响应中未找到response_text或其为空:",t),e.index.showToast({title:"AI响应内容为空",icon:"none",duration:2e3}))})).catch(((t=null)=>{console.error("LLM API调用失败，捕获到错误:",t),e.index.hideLoading(),console.error("LLM请求失败的完整错误信息:",UTS.JSON.stringify(t,null,2));let i="AI服务暂时不可用";t&&(t.message&&(i=t.message),t.detail&&("string"==typeof t.detail?i+=`: ${t.detail}`:t.detail.errMsg?i+=`: ${t.detail.errMsg}`:Array.isArray(t.detail)&&t.detail.length>0&&t.detail[0].msg&&(i+=`: ${t.detail[0].msg}`))),e.index.showToast({title:i,icon:"none",duration:4e3})})).finally((()=>{console.log("LLM API调用结束，执行 finally 块"),this.$nextTick((()=>{this.scrollToBottom(),this.loading=!1,setTimeout((()=>{this.animating=!1}),300)}))}))},handleInputClick(){},scrollToBottom(){setTimeout((()=>{e.index.createSelectorQuery().in(this).selectAll(".chat-box view").boundingClientRect(((e=null)=>{e&&e.length>0&&(this.scrollTop=1e4)})).exec()}),100)},closeEmotionModal(){this.showEmotionModal=!1},startEmotionDetection(){this.closeEmotionModal(),e.index.navigateTo({url:"/pages/emotion-detect/emotion-detect"})},onSettingTap(){e.index.showToast({title:"设置功能开发中...",icon:"none"})}})}));const s=e._export_sfc(n,[["render",function(t,i,o,n,s,l){return{a:e.sei(e.gei(t,""),"view")}}]]);function l(){const t=e.createSSRApp(s);return t.config.globalProperties.$global={isApiInitialized:!1,apiReadyCallbacks:[],onApiReady(e=null){this.isApiInitialized?e():this.apiReadyCallbacks.push(e)},markApiAsInitialized(){this.isApiInitialized=!0,this.apiReadyCallbacks.forEach(((e=null)=>{try{e()}catch(t){console.error("API就绪回调执行错误:",t)}})),this.apiReadyCallbacks=[]}},{app:t,onLaunch(){console.log("App onLaunch"),setTimeout((()=>{t.config.globalProperties.$global.markApiAsInitialized(),console.log("标记API已初始化")}),1500)}}}l().app.mount("#app"),exports.createApp=l;
